apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-kpack-watcher
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "capi-k8s-release.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}-kpack-watcher
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}-kpack-watcher
    spec:
      serviceAccountName: controller
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name  }}-kpack-watcher
          image: "{{ .Values.image.kpackWatcher.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: CAPI_HOST
            value: capi
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kpack-watcher
rules:
- apiGroups: ["build.pivotal.io"]
  resources: ["images", "builds", "builds/status", "images/status"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kpack-watcher-binding
subjects:
- kind: ServiceAccount
  namespace: cf-system
  name: default
roleRef:
  kind: ClusterRole
  name: kpack-watcher
  apiGroup: rbac.authorization.k8s.io
